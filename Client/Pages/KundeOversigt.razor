@using BlazorAppClientServer.Client.Services
@using BlazorAppClientServer.Shared.Models

@page "/kundeoversigt"

<h3>Kunde Oversigt</h3>

@if (errorMessage != null)
{
    <p style="color: red;">@errorMessage</p>
}

@if (successMessage != null)
{
    <p style="color: green;">@successMessage</p>
}

@if (kundeList.Count == 0)
{
    <p>Indlæser kunder...</p>
}
else
{
    <table class="table table-striped text-center">

        <thead>
            <tr>
                <th>Navn </th>
                <th>Telefon </th>
                <th>Adresse </th>
                <th>Mærke </th>
                <th>Mekaniker </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var kunde in kundeList)
            {
                <tr>
                    <td>@kunde.Navn </td>
                    <td>@kunde.TelefonNummer </td>
                    <td>@kunde.Adresse </td>
                    @if (kunde.MærkeId != null)
                    {
                        <td>@mærkeList.Single(m => m.MærkeId == kunde.MærkeId).Navn </td>
                    }
                    else
                    {
                        <td>Ingen </td>
                    }
                    @if (kunde.MekanikerId != null)
                    {
                        <td>@mekanikerList.Single(m => m.MekanikerId == kunde.MekanikerId).Navn </td>
                    }
                    else
                    {
                        <td>Ingen </td>
                    }
                    <td>
                        <button class="btn btn-primary" @onclick="() => ShowMærke(kunde.KundeId)">Skift Mærke</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => ShowMekaniker(kunde.KundeId)">Skift Mekaniker</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => ShowOrdreHistorik(kunde.KundeId)">Se OrdreHistorik</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (showPopupOrdrer)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ordre Historik</h5>
                    <button type="button" class="btn-close"
                    @onclick="ClosePopup"></button>
                </div>
                <div class="modal-body">
                    <ul>
                        @foreach (var ordre in valgtOrdreList)
                        {
                            <h4> @ordre.OrdreDate.ToShortDateString() </h4>
                            <p><b>Ydelser i odreren: </b> </p>
                            @foreach (var ydelse in ordre.YdelseTilOrdre)
                            {
                                <li><b>@ydelse.Ydelse.Navn</b><br/></li>
                            }
                            <br>
                            <p>Total Pris for ordre: <b> @CalculatePrice(ordre)</b> dkk</p>
                            <p>Total Timer for ordre: <b> @CalculateHours(ordre)</b> timer</p>
                        }
                    </ul>

                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (showPopupMærke)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Skift Mærke</h5>
                    <button type="button" class="btn-close"
                    @onclick="ClosePopup"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <p>Vælg ny mærke for <b>@valgtKunde.Navn</b></p>
                    </div>
                    <select class="form-control" @bind="selectedMærke">
                        @foreach (var mærke in mærkeList)
                        {
                            <option value="@mærke.MærkeId"> @mærke.Navn </option>
                        }
                    </select>
                    <div>
                        <br />
                        <button class="btn btn-primary" @onclick="ChangeMærke">Skift Mærke </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@if (showPopupMærke)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Skift Mekaniker</h5>
                    <button type="button" class="btn-close"
                    @onclick="ClosePopup"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <p>Vælg ny mekaniker for <b>@valgtKunde.Navn</b></p>
                    </div>
                    <select class="form-control" @bind="selectedMekaniker">
                        @foreach (var mekaniker in mekanikerList)
                        {
                            <option value="@mekaniker.MekanikerId"> @mekaniker.Navn </option>
                        }
                    </select>
                    <div>
                        <br />
                        <button class="btn btn-primary" @onclick="ChangeMekaniker">Skift Mekaniker </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Inject]
    IKundeService KundeService { get; set; }
    [Inject]
    IMærkeService MærkeService { get; set; }
    [Inject]
    IMekanikerService MekanikerService { get; set; }
    [Inject]
    IOrdreService OrdreService { get; set; }

    private List<Kunde> kundeList = new List<Kunde>();
    private Kunde valgtKunde = new Kunde();
    private List<Ordre> valgtOrdreList = new List<Ordre>();

    private List<Mærke> mærkeList = new List<Mærke>();
    private List<Mekaniker> mekanikerList = new List<Mekaniker>();
    private List<Ordre> ordreList = new List<Ordre>();

    private int selectedMærke = 1;
    private int selectedMekaniker = 1;

    private bool showPopupOrdrer;
    private bool showPopupMærke;
    private bool showPopupMekaniker;

    private string? errorMessage;
    private string? successMessage;

    protected override async Task OnInitializedAsync()
    {
        kundeList = (await KundeService.GetAllKunder()).ToList();
        mærkeList = (await MærkeService.GetAllMærker()).ToList();
        mekanikerList = (await MekanikerService.GetAllMekaniker()).ToList();
        ordreList = (await OrdreService.GetAllOrdre()).ToList();
    }

    private void ShowOrdreHistorik(int kundeId)
    {
        valgtKunde = kundeList.Single(k => k.KundeId == kundeId);
        valgtOrdreList = ordreList.Where(o => o.KundeId == valgtKunde.KundeId).ToList();
        showPopupOrdrer = true;
    }

    private void ShowMærke(int kundeId)
    {
        valgtKunde = kundeList.Single(k => k.KundeId == kundeId);
        showPopupMærke = true;
    }

    private void ShowMekaniker(int kundeId)
    {
        valgtKunde = kundeList.Single(k => k.KundeId == kundeId);
        showPopupMekaniker = true;
    }

    private void ClosePopup()
    {
        valgtOrdreList = new List<Ordre>();

        showPopupOrdrer = false;
        showPopupMærke = false;
        showPopupMekaniker = false;
        selectedMærke = 1;
        selectedMekaniker = 1;
    }

    private double CalculatePrice(Ordre ordre)
    {
        double tempPrice = 0;
        foreach(var ydelse in ordre.YdelseTilOrdre)
        {
            tempPrice += ydelse.TotalPris;
        }
        return tempPrice;
    }

    private double? CalculateHours(Ordre ordre)
    {
        double? tempHours = 0;
        foreach (var ydelse in ordre.YdelseTilOrdre)
        {
            tempHours += ydelse.GetTimer();
        }
        return tempHours;
    }

    private async Task ChangeMærke()
    {
        valgtKunde.MærkeId = selectedMærke;
        var success = await KundeService.UpdateKunde(valgtKunde);
        CheckSuccess(success);
        ClosePopup();
    }

    private async Task ChangeMekaniker()
    {
        valgtKunde.MekanikerId = selectedMekaniker;
        var success = await KundeService.UpdateKunde(valgtKunde);
        CheckSuccess(success);
        ClosePopup();
    }

    private void CheckSuccess(bool success)
    {
        if (success)
        {
            successMessage = "Mekaniker Ændret!";
            errorMessage = null;
        }
        else
        {
            errorMessage = "Der opstod en fejl.";
            successMessage = null;
        }
    }
}

