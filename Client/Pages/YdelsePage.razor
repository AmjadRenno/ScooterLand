@page "/ydelsepage"
@using BlazorAppClientServer.Client.Models
@using Radzen  <!-- Importer Radzen -->
@using Radzen.Blazor
@using BlazorAppClientServer.Client.Services
@using BlazorAppClientServer.Shared.Models

<h3>Book Ydelse</h3>

<RadzenRow>
    <RadzenColumn Width="8">
        <EditForm Model="_entryModel" OnValidSubmit="HandleBooking">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <RadzenCard>
                <RadzenFieldset>
                    <legend>Booking Information</legend>

                    <div class="form-group">
                        <label for="name">Navn:</label>
                        <InputText id="name" @bind-Value="_entryModel.Name" class="form-control" placeholder="Indtast dit navn" required />
                    </div>

                    <div class="form-group">
                        <RadzenDropDown @bind-Value="selectedServiceIds"
                                        Data="@_services"
                                        TextProperty="Navn"
                                        ValueProperty="YdelseId"
                                        Multiple="true"
                                        Placeholder="Vælg en eller flere ydelser"
                                        Style="width: 100%; max-width: 400px;"
                                        Name="YdelseDropDown" />
                    </div>

                    <div class="form-group">
                        <button class="btn btn-secondary" @onclick="AddSelectedServices">Tilføj valgte ydelser</button>
                    </div>

                    <ul class="list-group mt-3">
                        @foreach (var service in _entryModel.SelectedYdelser)
                        {
                            <li class="list-group-item d-flex flex-column">
                                @service.Navn - @service.Pris.ToString("C2")
                                <RadzenDropDown @bind-Value="service.SelectedMekanikerId"
                                                Data="@_mekanikers"
                                                TextProperty="Name"
                                                ValueProperty="MekanikerId"
                                                Placeholder="Vælg mekaniker"
                                                Style="width: 100%; max-width: 300px;" />
                                <button class="btn btn-sm btn-danger mt-2" @onclick="() => RemoveService(service)">Fjern</button>
                            </li>
                        }
                    </ul>


                    <div class="form-group">
                        <label for="price">Pris:</label>
                        <RadzenNumeric id="price"
                                       Value="_entryModel.Price"
                                       Disabled="true"
                                       Style="width: 100%;"
                        FormatString="C2" /> <!-- Format the price with 2 decimal places -->
                        <span class="ml-2">DKK</span> <!-- Add DKK after the price -->
                    </div>

                    <div class="form-group">
                        <label for="date">Dato:</label>
                        <InputDate id="date" @bind-Value="_entryModel.Date" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" required />
                    </div>
                </RadzenFieldset>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block">Bekræft Booking</button>
                </div>

            </RadzenCard>
        </EditForm>

        <!-- Booking confirmation will be shown here -->
        <RenderYdelse EntryDetails="_entryModel" ShowConfirmation="_isBooked" />
    </RadzenColumn>

    <!-- Prisliste til højre -->
    <RadzenColumn Width="4">
        <RadzenCard>
            <RadzenFieldset>
                <legend>Vores Ydelser</legend>
                <ul class="list-group">
                    @foreach (var service in _services)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @service.Navn
                            <span class="badge badge-primary">@service.Pris.ToString("C")</span>
                        </li>
                    }
                </ul>
            </RadzenFieldset>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

@code {
    private EntryModel _entryModel = new();
    private bool _isBooked = false;

    private List<Ydelse> _services = new();
    private List<Mekaniker> _mekanikers = new();
    private List<int> selectedServiceIds = new();

    [Inject]
    public IYdelseService Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadServicesAsync();
    }

    private async Task LoadServicesAsync()
    {
        try
        {
            var ydelser = await Service.GetAllYdelser();
            _services = ydelser?.ToList() ?? new List<Ydelse>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fejl ved hentning af ydelser: {ex.Message}");
        }
    }

    private void AddSelectedServices()
    {
        foreach (var id in selectedServiceIds)
        {
            var service = _services.FirstOrDefault(s => s.YdelseId == id);
            if (service != null && !_entryModel.SelectedYdelser.Contains(service))
            {
                _entryModel.SelectedYdelser.Add(service);
                _entryModel.Price += service.Pris;  // Add service price to the total
            }
        }

        selectedServiceIds.Clear();  // Clear selected items
    }


    private void RemoveService(Ydelse service)
    {
        _entryModel.SelectedYdelser.Remove(service);
    }

    private void HandleBooking()
    {
        _isBooked = true;

        // Log or process booking details
        Console.WriteLine($"Booked services: {string.Join(", ", _entryModel.SelectedYdelser.Select(s => s.Navn))}");
    }
}